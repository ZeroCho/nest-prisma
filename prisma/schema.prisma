// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String      @id
  nickname         String
  image            String
  password         String
  Posts            Post[]
  provider         String      @default("local")
  snsId            String?
  createdAt        DateTime    @default(now())
  Hearts           PostHeart[]
  deletedAt        DateTime?
  Followers        User[]      @relation("Follow")
  Followings       User[]      @relation("Follow")
  SentMessages     Message[]   @relation("sender")
  ReceivedMessages Message[]   @relation("receiver")
}

model Post {
  postId       Int         @id @default(autoincrement())
  content      String
  userId       String
  User         User        @relation(fields: [userId], references: [id])
  createdAt    DateTime    @default(now())
  Images       PostImage[]
  Hashtags     Hashtag[]
  parentId     Int?
  commentCount Int         @default(0)
  heartCount   Int         @default(0)
  repostCount  Int         @default(0)
  Parent       Post?       @relation("comment", fields: [parentId], references: [postId])
  Comments     Post[]      @relation("comment")
  originalId   Int?
  Original     Post?       @relation("repost", fields: [originalId], references: [postId])
  Reposts      Post[]      @relation("repost")
  Hearts       PostHeart[]
  deletedAt    DateTime?
}

model PostHeart {
  userId    String
  postId    Int
  User      User     @relation(references: [id], fields: [userId])
  Post      Post     @relation(references: [postId], fields: [postId])
  createdAt DateTime @default(now())

  @@id([postId, userId])
}

model PostImage {
  imageId   Int      @id @default(autoincrement())
  link      String
  createdAt DateTime @default(now())
  postId    Int
  Post      Post     @relation(fields: [postId], references: [postId])
}

model Hashtag {
  title     String   @id
  createdAt DateTime @default(now())
  Posts     Post[]
}

model Message {
  messageId  Int      @id @default(autoincrement())
  senderId   String
  Sender     User     @relation("sender", fields: [senderId], references: [id])
  room       String
  content    String
  receiverId String
  Receiver   User     @relation("receiver", fields: [receiverId], references: [id])
  createdAt  DateTime @default(now())
}
